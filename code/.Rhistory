mutate(Age=case_when(
Age=='36+'~'36-40',
TRUE ~ Age)
) %>% #Converts unbounded to bounded.
separate(Age,into=c('Low_Bound','High_Bound'),sep='-') %>% #Separates into bounds.
rowwise() %>% #Makes next verbs act row-wise.
transmute(Age=sample(Low_Bound:High_Bound,1)) %>% #Finds the means and drops the bounds.
ungroup() %>% #Ungroups row-wise groups to prevent unexpected behavior.
mutate(
Range=case_when(
Age<=25 ~ 'Younger (22-25)',
Age>=26 & Age<=30 ~ 'Middle (26-30)',
Age>=31 ~ 'Older (31-36+)') #Merges 31-35 and 36-40, only one subject 36+.
) %>% #Reforms the age ranges in addition for visualization later.
mutate(
Range=factor(Range,levels=c('Younger (22-25)',
'Middle (26-30)',
'Older (31-36+)'))) %>% #Converts ranges to factors.
select(Subject,Flex_Score,Gender,Age,Range,everything())
View(flexcog)
set.seed(12345)
flexpred <- flexcog %>%
mutate(Age=case_when(
Age=='36+'~'36-40',
TRUE ~ Age)
) %>% #Converts unbounded to bounded.
separate(Age,into=c('Low_Bound','High_Bound'),sep='-') %>% #Separates into bounds.
rowwise() %>% #Makes next verbs act row-wise.
mutate(Age=sample(Low_Bound:High_Bound,1),
Low_Bound=NULL,High_Bound=NULL) %>% #Finds the means and drops the bounds.
ungroup() %>% #Ungroups row-wise groups to prevent unexpected behavior.
mutate(
Range=case_when(
Age<=25 ~ 'Younger (22-25)',
Age>=26 & Age<=30 ~ 'Middle (26-30)',
Age>=31 ~ 'Older (31-36+)') #Merges 31-35 and 36-40, only one subject 36+.
) %>% #Reforms the age ranges in addition for visualization later.
mutate(
Range=factor(Range,levels=c('Younger (22-25)',
'Middle (26-30)',
'Older (31-36+)'))) %>% #Converts ranges to factors.
select(Subject,Flex_Score,Gender,Age,Range,everything())
statepath <- paste('../outputs/r_stateflex/',roi,'/',width,'/',k,'/stateflex.csv',sep='')
cogpath <- '../outputs/cognition/cogscores.csv'
stateflex <- read_csv(statepath,col_names=c('Subject','Flex_Score'))
cogscores <- read_csv(cogpath,col_names=T)
cogscores <- cogscores %>%
rename(g=gPCA,
NIH_Fluid=CogFluidComp_Unadj,
PMAT_Fluid=PMAT24_A_CR,
NIH_Crystal=CogCrystalComp_Unadj,
PicVoc_Crystal=PicVocab_Unadj)
#Merges datasets by subject.
flexcog <- stateflex %>%
inner_join(cogscores)
#Converts subject id to string and gender to a labelled factor.
flexcog <- flexcog %>%
mutate(Subject=as.character(Subject),
Gender=factor(Gender,labels=c('Female','Male')))
set.seed(12345)
flexpred <- flexcog %>%
mutate(Age=case_when(
Age=='36+'~'36-40',
TRUE ~ Age)
) %>% #Converts unbounded to bounded.
separate(Age,into=c('Low_Bound','High_Bound'),sep='-') %>% #Separates into bounds.
rowwise() %>% #Makes next verbs act row-wise.
transmute(Age=sample(Low_Bound:High_Bound,1))
View(flexpred)
setwd("~/GitHub/PSY1210-FLEXCOG/code")
library(tidyverse) #Various useful functions.
library(rms) #Statistics.
library(lattice) #Statistical plotting for exploratory goal.
library(patchwork) #Plotting.
#Masked functions: src, summarize, format.pval, units, backsolve
#Set parameters manually for interactive running.
roi <- 'Whole' #Roi set name.
width <- '62' #dFC window width label.
k <- '5'
statepath <- paste('../outputs/r_stateflex/',roi,'/',width,'/',k,'/stateflex.csv',sep='')
cogpath <- '../outputs/cognition/cogscores.csv'
stateflex <- read_csv(statepath,col_names=c('Subject','Flex_Score'))
cogscores <- read_csv(cogpath,col_names=T)
cogscores <- cogscores %>%
rename(g=gPCA,
NIH_Fluid=CogFluidComp_Unadj,
PMAT_Fluid=PMAT24_A_CR,
NIH_Crystal=CogCrystalComp_Unadj,
PicVoc_Crystal=PicVocab_Unadj)
#Merges datasets by subject.
flexcog <- stateflex %>%
inner_join(cogscores)
#Converts subject id to string and gender to a labelled factor.
flexcog <- flexcog %>%
mutate(Subject=as.character(Subject),
Gender=factor(Gender,labels=c('Female','Male')))
View(flexcog)
set.seed(12345)
flexpred <- flexcog %>%
mutate(Age=case_when(
Age=='36+'~'36-40',
TRUE ~ Age)
) %>% #Converts unbounded to bounded.
separate(Age,into=c('Low_Bound','High_Bound'),sep='-') %>% #Separates into bounds.
rowwise() %>% #Makes next verbs act row-wise.
mutate(Age=sample(Low_Bound:High_Bound,1),
Low_Bound=NULL,High_Bound=NULL) %>% #Finds the means and drops the bounds.
ungroup() %>% #Ungroups row-wise groups to prevent unexpected behavior.
mutate(
Range=case_when(
Age<=25 ~ 'Younger (22-25)',
Age>=26 & Age<=30 ~ 'Middle (26-30)',
Age>=31 ~ 'Older (31-36+)') #Merges 31-35 and 36-40, only one subject 36+.
) %>% #Reforms the age ranges in addition for visualization later.
mutate(
Range=factor(Range,levels=c('Younger (22-25)',
'Middle (26-30)',
'Older (31-36+)'))) %>% #Converts ranges to factors.
select(Subject,Flex_Score,Gender,Age,Range,everything())
flexpred.dd <- datadist(flexpred)
options(datadist='flexpred.dd')
anova(ols(g~Flex_Score*Age*Gender,data=flexpred)) #g-factor, p ~0.2097
anova(ols(NIH_Fluid~Flex_Score*Age*Gender,data=flexpred)) #NIH Fluid, p ~0.0138
anova(ols(PMAT_Fluid~Flex_Score*Age*Gender,data=flexpred)) #PMAT Fluid, p ~0.0283
anova(ols(NIH_Crystal~Flex_Score*Age*Gender,data=flexpred)) #NIH Crystal, p ~0.3419
anova(ols(PicVoc_Crystal~Flex_Score*Age*Gender,data=flexpred))
f.NIH.olslist <- list(
ols(NIH_Fluid~Flex_Score+Age+Gender+Flex_Score:Age+Flex_Score:Gender+Age:Gender+Flex_Score:Age:Gender,data=flexpred),
ols(NIH_Fluid~Flex_Score+Age+Gender+Flex_Score:Age+Flex_Score:Gender+Age:Gender,data=flexpred),
ols(NIH_Fluid~Flex_Score+Age+Gender+Flex_Score:Age+Flex_Score:Gender,data=flexpred),
ols(NIH_Fluid~Flex_Score+Age+Gender+Flex_Score:Age+Age:Gender,data=flexpred),
ols(NIH_Fluid~Flex_Score+Age+Gender+Flex_Score:Gender+Age:Gender,data=flexpred),
ols(NIH_Fluid~Flex_Score+Age+Gender+Flex_Score:Age,data=flexpred),
ols(NIH_Fluid~Flex_Score+Age+Gender+Flex_Score:Gender,data=flexpred),
ols(NIH_Fluid~Flex_Score+Age+Gender+Age:Gender,data=flexpred),
ols(NIH_Fluid~Flex_Score+Age+Flex_Score:Age,data=flexpred),
ols(NIH_Fluid~Flex_Score+Gender+Flex_Score:Gender,data=flexpred),
ols(NIH_Fluid~Age+Gender+Age:Gender,data=flexpred),
ols(NIH_Fluid~Flex_Score+Age+Gender,data=flexpred),
ols(NIH_Fluid~Flex_Score+Age,data=flexpred),
ols(NIH_Fluid~Flex_Score+Gender,data=flexpred),
ols(NIH_Fluid~Age+Gender,data=flexpred),
ols(NIH_Fluid~Flex_Score,data=flexpred),
ols(NIH_Fluid~Age,data=flexpred),
ols(NIH_Fluid~Gender,data=flexpred)
)
#Apply ANOVA to the list of ols-fitted models and save the output to a list.
f.NIH.anovalist = list()
for (i in seq_along(f.NIH.olslist)) {
f.NIH.anovalist[[i]] <- anova(f.NIH.olslist[[i]])
}
#Print out all the ANOVA overall regression tests from the list object to find
#significance.
f.NIH.anovalist
f.NIH.olslist
f.PMAT.olslist <- list(
ols(PMAT_Fluid~Flex_Score+Age+Gender+Flex_Score:Age+Flex_Score:Gender+Age:Gender+Flex_Score:Age:Gender,data=flexpred),
ols(PMAT_Fluid~Flex_Score+Age+Gender+Flex_Score:Age+Flex_Score:Gender+Age:Gender,data=flexpred),
ols(PMAT_Fluid~Flex_Score+Age+Gender+Flex_Score:Age+Flex_Score:Gender,data=flexpred),
ols(PMAT_Fluid~Flex_Score+Age+Gender+Flex_Score:Age+Age:Gender,data=flexpred),
ols(PMAT_Fluid~Flex_Score+Age+Gender+Flex_Score:Gender+Age:Gender,data=flexpred),
ols(PMAT_Fluid~Flex_Score+Age+Gender+Flex_Score:Age,data=flexpred),
ols(PMAT_Fluid~Flex_Score+Age+Gender+Flex_Score:Gender,data=flexpred),
ols(PMAT_Fluid~Flex_Score+Age+Gender+Age:Gender,data=flexpred),
ols(PMAT_Fluid~Flex_Score+Age+Flex_Score:Age,data=flexpred),
ols(PMAT_Fluid~Flex_Score+Gender+Flex_Score:Gender,data=flexpred),
ols(PMAT_Fluid~Age+Gender+Age:Gender,data=flexpred),
ols(PMAT_Fluid~Flex_Score+Age+Gender,data=flexpred),
ols(PMAT_Fluid~Flex_Score+Age,data=flexpred),
ols(PMAT_Fluid~Flex_Score+Gender,data=flexpred),
ols(PMAT_Fluid~Age+Gender,data=flexpred),
ols(PMAT_Fluid~Flex_Score,data=flexpred),
ols(PMAT_Fluid~Age,data=flexpred),
ols(PMAT_Fluid~Gender,data=flexpred)
)
f.PMAT.anovalist = list()
for (i in seq_along(f.PMAT.olslist)) {
f.PMAT.anovalist[[i]] <- anova(f.PMAT.olslist[[i]])
}
f.PMAT.anovalist
f.PMAT.olslist
f.NIH.ideal.ols <- ols(NIH_Fluid~Flex_Score+Age+Gender+Flex_Score:Age+Age:Gender,
data=flexpred)
f.PMAT.ideal.ols <- ols(PMAT_Fluid~Flex_Score+Gender+Flex_Score:Gender,
data=flexpred)
qqnorm(resid(f.NIH.ideal.ols),main='Normal Q-Q Plot for Residuals')
qqline(resid(f.NIH.ideal.ols))
xyplot(resid(f.NIH.ideal.ols)~fitted(f.NIH.ideal.ols),xlab='Fitted Values',
ylab='Residuals',main="Residuals versus Fitted Values",type=c('p','r'))
qqnorm(resid(f.PMAT.ideal.ols),main='Normal Q-Q Plot for Residuals')
qqline(resid(f.PMAT.ideal.ols))
xyplot(resid(f.PMAT.ideal.ols)~fitted(f.PMAT.ideal.ols),xlab="Fitted Values",
ylab="Residuals",main="Residuals versus Fitted Values",type=c('p','r'))
theme_set(theme_light())
p1 <- flexpred %>%
ggplot(aes(y=NIH_Fluid,x=Flex_Score)) + #Defines equation.
geom_point(size=2) + #Points.
stat_smooth(method='lm',formula=y~x,fullrange=T) + #Regression and error.
scale_x_continuous(breaks=seq(0,250,by=50)) + #x-axis ticks for less crowding.
coord_cartesian(ylim=c(75,150)) + #y-axis limits to encompass data.
ylab('NIH Fluid Score') +
xlab('State Flexibility Score') +
ggtitle('NIH Fluid Score-State Flexibility') #Labels and title.
p1
#Save graph in specified location, in inch units, with width and heights of 8.
ggsave('../outputs/r_statefigures/NIH_Fluid~Flex.pdf',units='in',width=8,height=8)
p1 <- flexpred %>%
ggplot(aes(y=NIH_Fluid,x=Age)) +
geom_point(size=2) +
stat_smooth(method='lm',formula=y~x,fullrange=T) +
scale_x_continuous(breaks=seq(21,41,by=6)) +
coord_cartesian(ylim=c(75,150)) +
ylab('NIH Fluid Score') +
xlab('Age') +
ggtitle('NIH Fluid Score-Age')
p1
ggsave('../outputs/r_statefigures/NIH_Fluid~Age.pdf',units='in',width=8,height=8)
p1 <- flexpred %>%
ggplot(aes(y=NIH_Fluid,x=Gender,fill=Gender)) + #Defines equation and color separation.
geom_boxplot() + #Box plot.
ylab('NIH Fluid Score') +
xlab('Gender') +
ggtitle('NIH Fluid Score-Gender') #Labels and title.
p1
ggsave('../outputs/r_statefigures/NIH_Fluid~Gender.pdf',units='in',width=8,height=8)
p1 <- flexpred %>%
ggplot(aes(y=NIH_Fluid,x=Flex_Score,fill=Range,colour=Range)) + #Defines equation and color separation.
geom_point(size=2) + #Points.
stat_smooth(method='lm',formula=y~x,fullrange=T,alpha=0.15) + #Regression and error.
xlab('State Flexibility Score') +
ggtitle('NIH Fluid Score-State Flexibility',subtitle='Age Separated') + #Labels and title.
theme(axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position='None') #Get rid of redundant text in axes and legend.
p1
p2 <- flexpred %>%
ggplot(aes(y=NIH_Fluid,x=Flex_Score,fill=Range,colour=Range)) + #Defines equation and color separation.
geom_point(size=2) + #Points.
stat_smooth(method='lm',formula=y~x,fullrange=T,alpha=0.15) + #Regression and error.
facet_grid(cols=vars(Range)) + #Separates by variable into adjacent graphs.
scale_x_continuous(breaks=seq(0,250,by=50)) + #x-axis ticks for less crowding.
coord_cartesian(ylim=c(75,150)) + #y-axis limits to encompass data.
theme(strip.background=element_rect(fill='grey90'),
strip.text=element_text(colour='black'), #Converts title strip aesthetics.
legend.position='None', #Removes redundant label.
axis.title.y=element_text(hjust=1.40)) + #Moves y-axis label to common area.
xlab('State Flexibility Score') +
ylab('NIH Fluid Score') #Label and title.
p2
p1/p2 #Combine graphs vertically.
ggsave('../outputs/r_statefigures/NIH_Fluid~Flex~AgeSep.pdf',units='in',width=8,height=8)
p1 <- flexpred %>%
ggplot(aes(y=NIH_Fluid,x=Flex_Score,fill=Gender,color=Gender)) +
geom_point(size=2) +
stat_smooth(method='lm',formula=y~x,fullrange=T,alpha=0.15) +
scale_x_continuous(breaks=seq(0,250,by=50)) +
ggtitle('NIH Fluid Score-State Flexibility',subtitle='Gender Separated') +
theme(legend.position='None',
axis.title.x=element_blank(),
axis.title.y=element_blank())
p1
p2 <- flexpred %>%
ggplot(aes(y=NIH_Fluid,x=Flex_Score,fill=Gender,color=Gender)) +
geom_point(size=2) +
stat_smooth(method='lm',formula=y~x,fullrange=T,alpha=0.15) +
scale_x_continuous(breaks=seq(0,250,by=50)) +
coord_cartesian(ylim=c(75,150)) +
facet_wrap(~Gender) +
theme(strip.background=element_rect(fill='grey90'),
strip.text=element_text(colour='black'),
legend.position='None',
axis.title.y=element_text(hjust=1.40)) +
xlab('State Flexibility Score') +
ylab('NIH Fluid Score')
p2
p1/p2
ggsave('../outputs/r_statefigures/NIH_Fluid~Flex~GenSep.pdf',units='in',
width=8,height=8)
p1 <- flexpred %>%
ggplot(aes(y=NIH_Fluid,x=Flex_Score,fill=Gender,colour=Gender)) + #Color separate by second variable.
geom_point(size=2) + #Points.
stat_smooth(method='lm',formula=y~x,fullrange=T,alpha=0.15) + #Regression and error.
facet_grid(rows=vars(Range),cols=vars(Gender)) + #Separate by second and third variable.
scale_x_continuous(breaks=seq(0,250,by=50)) + #x-axis ticks for less crowding.
coord_cartesian(ylim=c(75,150)) + #y-axis limits to encompass data.
xlab('State Flexibility Score') +
ylab('NIH Fluid Intelligence Score') +
ggtitle('NIH Fluid Score-State Flexibility',subtitle='Age-Gender Separated') + #Labels and title.
theme(strip.background=element_rect(fill='grey90'),
strip.text=element_text(colour='black'),
legend.position='None') #Converts title strip aesthetics and removes redundant legend.
p1
ggsave('../outputs/r_statefigures/NIH_Fluid~Flex~AgeGenSep.pdf',units='in',width=8,height=8)
p1 <- flexpred %>%
ggplot(aes(y=NIH_Fluid,x=Flex_Score,colour=Gender,fill=Gender)) + #Color separate by second variable.
geom_point(size=2) + #Points.
stat_smooth(method='lm',formula=y~x,fullrange=T,alpha=0.15) + #Regression and error.
facet_grid(rows=vars(Range)) + #Separate by third variable.
scale_x_continuous(breaks=seq(0,250,by=50)) + #x-axis ticks for less crowding.
coord_cartesian(ylim=c(75,150)) + #y-axis limits to encompass data.
xlab('State Flexibility Score') +
ylab('NIH Fluid Intelligence Score') +
ggtitle('NIH Fluid Score-State Flexibility',subtitle='Age-Gender Separated,
Gender Collapsed') + #Labels and title.
theme(strip.background=element_rect(fill='grey90'),
strip.text=element_text(colour='black')) #Converts title strip aesthetics.
p1
ggsave('../outputs/r_statefigures/NIH_Fluid~Flex~AgeSepGenOver.pdf',units='in',
width=8,height=8)
p1 <- flexpred %>%
ggplot(aes(y=NIH_Fluid,x=Flex_Score,colour=Gender,fill=Gender)) + #Color separate by second variable.
geom_point(size=2) + #Points.
stat_smooth(method='lm',formula=y~x,fullrange=T,alpha=0.15) + #Regression and error.
facet_grid(rows=vars(Range)) + #Separate by third variable.
scale_x_continuous(breaks=seq(0,250,by=50)) + #x-axis ticks for less crowding.
coord_cartesian(ylim=c(75,150)) + #y-axis limits to encompass data.
xlab('State Flexibility Score') +
ylab('NIH Fluid Intelligence Score') +
ggtitle('NIH Fluid Score-State Flexibility',subtitle='Age-Gender Separated,
Gender Overlapped') + #Labels and title.
theme(strip.background=element_rect(fill='grey90'),
strip.text=element_text(colour='black')) #Converts title strip aesthetics.
p1
ggsave('../outputs/r_statefigures/NIH_Fluid~Flex~AgeSepGenOver.pdf',units='in',
width=8,height=8)
p1 <- flexpred %>%
ggplot(aes(y=NIH_Fluid,x=Flex_Score,colour=Gender,fill=Gender)) + #Color separate by second variable.
geom_point(size=2) + #Points.
stat_smooth(method='lm',formula=y~x,fullrange=T,alpha=0.15) + #Regression and error.
facet_grid(rows=vars(Range)) + #Separate by third variable.
scale_x_continuous(breaks=seq(0,250,by=50)) + #x-axis ticks for less crowding.
coord_cartesian(ylim=c(75,150)) + #y-axis limits to encompass data.
xlab('State Flexibility Score') +
ylab('NIH Fluid Intelligence Score') +
ggtitle('NIH Fluid Score-State Flexibility',subtitle='Age-Gender Separated, Gender Overlapped') + #Labels and title.
theme(strip.background=element_rect(fill='grey90'),
strip.text=element_text(colour='black')) #Converts title strip aesthetics.
p1
ggsave('../outputs/r_statefigures/NIH_Fluid~Flex~AgeSepGenOver.pdf',units='in',
width=8,height=8)
p1 <- flexpred %>%
ggplot(aes(y=NIH_Fluid,x=Flex_Score,colour=Range,fill=Range)) + #Color separate by second variable.
geom_point(size=2) + #Points.
stat_smooth(method='lm',formula=y~x,fullrange=T,alpha=0.15) + #Regression and error.
facet_grid(rows=vars(Gender)) + #Separate by third variable.
scale_x_continuous(breaks=seq(0,250,by=50)) + #x-axis ticks for less crowding.
coord_cartesian(ylim=c(75,150)) + #y-axis limits to encompass data.
xlab('State Flexibility Score') +
ylab('NIH Fluid Intelligence Score') +
ggtitle('NIH Fluid Score-State Flexibility',subtitle='Age-Gender Separated, Age Overlapped') + #Labels and title.
theme(strip.background=element_rect(fill='grey90'),
strip.text=element_text(colour='black')) #Converts title strip aesthetics.
p1
ggsave('../outputs/r_statefigures/NIH_Fluid~Flex~AgeOverGenSep.pdf',units='in',
width=8,height=8)
p1 <- flexpred %>%
ggplot(aes(y=NIH_Fluid,x=Age,fill=Gender,color=Gender)) +
geom_point(size=2) +
stat_smooth(method='lm',formula=y~x,fullrange=T,alpha=0.15) +
ggtitle('NIH Fluid Score-Age',subtitle='Gender Separated') +
theme(legend.position='None',axis.title.x=element_blank(),
axis.title.y=element_blank())
p1
p2 <- flexpred %>%
ggplot(aes(y=NIH_Fluid,x=Age,fill=Gender,color=Gender)) +
geom_point(size=2) +
stat_smooth(method='lm',formula=y~x,fullrange=T,alpha=0.15) +
coord_cartesian(ylim=c(75,150)) +
facet_wrap(~Gender) +
theme(strip.background=element_rect(fill='grey90'),
strip.text=element_text(colour='black'),
legend.position='None',
axis.title.y=element_text(hjust=1.40)) +
xlab('Age') +
ylab('NIH Fluid Score')
p2
p1/p2
ggsave('../outputs/r_statefigures/NIH_Fluid~Age~GenSep.pdf',units='in',
width=8,height=8)
p1 <- flexpred %>%
ggplot(aes(y=PMAT_Fluid,x=Flex_Score)) +
geom_point(size=2) +
stat_smooth(method='lm',formula=y~x,fullrange=T) +
scale_x_continuous(breaks=seq(0,250,by=50)) +
coord_cartesian(ylim=c(0,30)) +
ylab('PMAT24 Fluid Score') +
xlab('State Flexibility Score') +
ggtitle('PMAT24 Fluid Score-State Flexibility')
p1
ggsave('../outputs/r_statefigures/PMAT24_Fluid~Flex.pdf',units='in',width=8,height=8)
p1 <- flexpred %>%
ggplot(aes(y=PMAT_Fluid,x=Age)) +
geom_point(size=2) +
stat_smooth(method='lm',formula=y~x,fullrange=T) +
scale_x_continuous(breaks=seq(21,41,by=6)) +
coord_cartesian(ylim=c(0,30)) +
ylab('PMAT24 Fluid Score') +
xlab('Age') +
ggtitle('PMAT24 Fluid Score-Age')
p1
ggsave('../outputs/r_statefigures/PMAT24_Fluid~Age.pdf',units='in',width=8,height=8)
p1 <- flexpred %>%
ggplot(aes(y=PMAT_Fluid,x=Gender,fill=Gender)) +
geom_boxplot() +
ylab('PMAT24 Fluid Score') +
xlab('Gender') +
ggtitle('PMAT24 Fluid Score-Gender')
p1
ggsave('../outputs/r_statefigures/PMAT24_Fluid~Gender.pdf',units='in',width=8,height=8)
p1 <- flexpred %>%
ggplot(aes(y=PMAT_Fluid,x=Flex_Score,fill=Range,colour=Range)) +
geom_point(size=2) +
stat_smooth(method='lm',formula=y~x,fullrange=T,alpha=0.15) +
xlab('State Flexibility Score') +
ggtitle('PMAT24 Fluid Score-State Flexibility',subtitle='Age Separated') +
theme(axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position='None')
p1
p2 <- flexpred %>%
ggplot(aes(y=PMAT_Fluid,x=Flex_Score,fill=Range,colour=Range)) +
geom_point(size=2) +
stat_smooth(method='lm',formula=y~x,fullrange=T,alpha=0.15) +
facet_grid(cols=vars(Range)) +
scale_x_continuous(breaks=seq(0,250,by=50)) +
coord_cartesian(ylim=c(0,30)) +
theme(strip.background=element_rect(fill='grey90'),
strip.text=element_text(colour='black'),
legend.position='None',
axis.title.y=element_text(hjust=1.35)) +
xlab('State Flexibility Score') +
ylab('PMAT24 Fluid Score')
p2
p1/p2
ggsave('../outputs/r_statefigures/PMAT24_Fluid~Flex~AgeSep.pdf',units='in',width=8,height=8)
p1 <- flexpred %>%
ggplot(aes(y=PMAT_Fluid,x=Flex_Score,fill=Gender,color=Gender)) +
geom_point(size=2) +
stat_smooth(method='lm',formula=y~x,fullrange=T,alpha=0.15) +
scale_x_continuous(breaks=seq(0,250,by=50)) +
ggtitle('PMAT24 Fluid Score-State Flexibility',subtitle='Gender Separated') +
theme(legend.position='None',axis.title.x=element_blank(),
axis.title.y=element_blank())
p1
p2 <- flexpred %>%
ggplot(aes(y=PMAT_Fluid,x=Flex_Score,fill=Gender,color=Gender)) +
geom_point(size=2) +
stat_smooth(method='lm',formula=y~x,fullrange=T,alpha=0.15) +
scale_x_continuous(breaks=seq(0,250,by=50)) +
coord_cartesian(ylim=c(0,30)) +
facet_wrap(~Gender) +
theme(strip.background=element_rect(fill='grey90'),
strip.text=element_text(colour='black'),
legend.position='None',
axis.title.y=element_text(hjust=1.35)) +
xlab('State Flexibility Score') +
ylab('PMAT24 Fluid Score')
p2
p1/p2
ggsave('../outputs/r_statefigures/PMAT24_Fluid~Flex~GenSep.pdf',units='in',width=8,height=8)
p1 <- flexpred %>%
ggplot(aes(y=PMAT_Fluid,x=Flex_Score,fill=Gender,colour=Gender)) +
geom_point(size=2) +
stat_smooth(method='lm',formula=y~x,fullrange=T,alpha=0.15) +
facet_grid(rows=vars(Range),cols=vars(Gender)) +
scale_x_continuous(breaks=seq(0,250,by=50)) +
coord_cartesian(ylim=c(0,30)) +
xlab('State Flexibility Score') +
ylab('PMAT24 Fluid Intelligence Score') +
ggtitle('PMAT24 Fluid Score-State Flexibility',subtitle='Age-Gender Separated') +
theme(strip.background=element_rect(fill='grey90'),
strip.text=element_text(colour='black'),
legend.position='None')
p1
ggsave('../outputs/r_statefigures/PMAT24_Fluid~Flex~AgeGenSep.pdf',units='in',
width=8,height=8)
p1 <- flexpred %>%
ggplot(aes(y=PMAT_Fluid,x=Flex_Score,colour=Gender,fill=Gender)) +
geom_point(size=2) +
stat_smooth(method='lm',formula=y~x,fullrange=T,alpha=0.15) +
facet_grid(rows=vars(Range)) +
scale_x_continuous(breaks=seq(0,250,by=50)) +
coord_cartesian(ylim=c(0,30)) +
xlab('State Flexibility Score') +
ylab('PMAT24 Fluid Intelligence Score') +
ggtitle('PMAT24 Fluid Score-State Flexibility',subtitle='Age-Gender Separated, Gender Overlapped') +
theme(strip.background=element_rect(fill='grey90'),
strip.text=element_text(colour='black'))
p1
ggsave('../outputs/r_statefigures/PMAT24_Fluid~Flex~AgeSepGenOver.pdf',units='in',
width=8,height=8)
p1 <- flexpred %>%
ggplot(aes(y=PMAT_Fluid,x=Flex_Score,colour=Range,fill=Range)) +
geom_point(size=2) +
stat_smooth(method='lm',formula=y~x,fullrange=T,alpha=0.15) +
facet_grid(rows=vars(Gender)) +
scale_x_continuous(breaks=seq(0,250,by=50)) +
coord_cartesian(ylim=c(0,30)) +
xlab('State Flexibility Score') +
ylab('PMAT24 Fluid Intelligence Score') +
ggtitle('PMAT24 Fluid Score-State Flexibility',subtitle='Age-Gender Separated, Age Overlapped') +
theme(strip.background=element_rect(fill='grey90'),
strip.text=element_text(colour='black'))
p1
ggsave('../outputs/r_statefigures/PMAT24_Fluid~Flex~AgeOverGenSep.pdf',units='in',width=8,height=8)
anova(f.NIH.ideal.ols)
anova(f.PMAT.ideal.ols)
summary(f.NIH.ideal.ols,Flex_Score=c(0,100),Age=23.5)
summary(f.NIH.ideal.ols,Flex_Score=c(0,100),Age=28)
summary(f.NIH.ideal.ols,Flex_Score=c(0,100),Age=33.5)
summary(f.PMAT.ideal.ols,Flex_Score=c(0,100),Gender='Male')
summary(f.PMAT.ideal.ols,Flex_Score=c(0,100),Gender='Female')
